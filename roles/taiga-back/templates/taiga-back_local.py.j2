

from .common import *

MEDIA_URL = "{{ taiga_back_protocol }}://{{ taiga_back_hostname }}/media/"
STATIC_URL = "{{ taiga_back_protocol }}://{{ taiga_back_hostname }}//static/"
ADMIN_MEDIA_PREFIX = "{{ taiga_back_protocol }}://{{ taiga_back_hostname }}//static/admin/"
SITES["front"]["scheme"] = "{{ taiga_front_dist_protocol }}"
SITES["front"]["domain"] = "{{ taiga_front_dist_hostname }}"

SECRET_KEY = "{{ secret_key }}"

DEBUG = False
TEMPLATE_DEBUG = False
PUBLIC_REGISTER_ENABLED = True

DEFAULT_FROM_EMAIL = "no-reply@{{ taiga_back_hostname }}"
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# Uncomment and populate with proper connection parameters
# for enable email sending. EMAIL_HOST_USER should end by @domain.tld
#EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
#EMAIL_USE_TLS = False
#EMAIL_HOST = "localhost"
#EMAIL_HOST_USER = ""
#EMAIL_HOST_PASSWORD = ""
#EMAIL_PORT = 25

# Uncomment and populate with proper connection parameters
# for enable github login/singin.
#GITHUB_API_CLIENT_ID = "yourgithubclientid"
#GITHUB_API_CLIENT_SECRET = "yourgithubclientsecret"

# async tasks
#from .celery import *

#BROKER_URL = 'amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@{{ rabbitmq_hostname }}:5672/{{ rabbitmq_vhost }}'
#CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
#CELERY_ENABLED = True


# events
#EVENTS_PUSH_BACKEND = "taiga.events.backends.rabbitmq.EventsPushBackend"
#EVENTS_PUSH_BACKEND_OPTIONS = {"url": "amqp://{{ rabbitmq_user }}:{{ rabbitmq_password }}@{{ rabbitmq_hostname }}:5672/{{ rabbitmq_vhost }}"}


DATABASES["default"]["NAME"] = "{{ taiga_database_name }}"
DATABASES["default"]["USER"] = "{{ taiga_database_username }}"
DATABASES["default"]["PASSWORD"] = "{{ taiga_database_password }}"
DATABASES["default"]["HOST"] = "{{ taiga_database_hostname }}"
